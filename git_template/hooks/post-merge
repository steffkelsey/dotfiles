#!/bin/bash

# The post-merge hook will fire after a git merge has been done. For example if
# you are merging a feature branch into your master branch, or your master
# branch into a feature branch, this hook will fire.

# The hook will then detect if the merged branch was master - if it was, it will
# do nothing.

# If not, it will ask the user if they wish to delete the branch they have then
# merged. If nothing is done (or anything except y is entered) then the branch
# will remain. If a y was typed, it will delete the branch that was merged both
# locally and from the remote (if it exists).

# Get the current branch name
branch_name=$(git branch | grep "*" | sed "s/\* //")

# Get the name of the branch that was just merged
reflog_message=$(git reflog -1)
merged_branch_name=$(echo $reflog_message | cut -d" " -f 4 | sed "s/://")

# if the merged branch was master - don't do anything
if [[ $merged_branch_name = "master" ]]; then
  exit 0
fi

# Begin output
echo " "
echo "You've just merged the branch \"$merged_branch_name\" into \"$branch_name\". "

# Ask the question
read -p "Do you want to delete the \"$merged_branch_name\" branch? (y/N) " answer

# Check if the answer is a single lowercase Y
if [[ "$answer" == "y" ]]; then

  # Delete the local branch
  echo "Deleting local branch \"$merged_branch_name\""
  git branch -d $merged_branch_name

  # Delete the remote branch
  echo "Deleting remote branch"
  git push origin --delete $merged_branch_name
  exit 1
else
  echo "Did not delete the
  \"$merged_branch_name\" branch"
fi

